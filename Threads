-> Defination
      Threads are lightweight, independent sequences of instructions that can be scheduled and executed by the operating system's thread scheduler.
      They exist within the context of a single process and share the same memory space, allowing for concurrent execution of tasks and efficient utilization of multi-core processors.

-> Methods

      start(): 
          This method starts the execution of the thread. It calls the run() method, which you must override in a subclass of Thread to specify the code that should run in the new thread.   
      
          Thread myThread = new MyThread(); // MyThread is a subclass of Thread myThread.start(); 
      
      run():
          You override this method to define the code that should be executed in the new thread. It is called when you invoke start().

          public void run() {
              // Code to be executed in the thread
          }

    join(): 
          The join() method is used to wait for a thread to complete its execution. Calling join() on a thread causes the current thread to block until the joined thread finishes

          Thread myThread = new MyThread();
          myThread.start();
          myThread.join(); // Wait for myThread to finish

    isAlive(): 
          This method checks if a thread is currently running (has been started and has not yet finished).
    
          if (myThread.isAlive()) {
              // The thread is still running
          }

    interrupt():
          The interrupt() method is used to interrupt a thread's execution. It sets a flag that can be checked within the thread to exit it gracefully.

          if (myThread.isInterrupted()) {
              // The thread has been interrupted
          }
          
          if (Thread.interrupted()) {
              // Check if the current thread has been interrupted
          }
          
    yield(): 
          The yield() method is used to suggest to the thread scheduler that the current thread is willing to yield its current execution time, allowing other threads to run.
    
          Thread.yield();
    
    sleep():
          The sleep() method is used to make a thread sleep for a specified amount of time in milliseconds or nanoseconds. It can be used to introduce delays in execution.
    
           Thread.sleep(1000); 

-> Example

    class MyRunnable implements Runnable {
        public void run() {
            // Code to be executed in the thread
        }
    }

public class Main {
    public static void main(String[] args) {
        // Create a new thread
        Thread myThread = new Thread(new MyRunnable());

        // Start the thread
        myThread.start();

       }
}
