-> Definition
      Every code unit whether it is Class | Package | Method should have one responsibility. 
      In other words, there should be one reason to change.

      In the solid principles file, You observed that the Bird class consists of too many if/else  
      conditions if it is business logic like calculations then SRP doesn't apply such 
      conditions. But Bird class can have a different set of behaviors like fly | run | sing etc
      As different birds have different sets of behaviors it is really difficult for SE to update and
      debug the code. So these behaviors are in a different class and extend to Bird class.

A better approach is to follow the SRP by separating these responsibilities into distinct.

  -> // Bird Class
             public class Bird {
                private String name;
                private String color;
            
                public Bird(String name, String color) {
                    this.name = name;
                    this.color = color;
                }
                public  void display(){
                    System.out.println("name is "+name);
                    System.out.println("color is "+color);
                }
                public  String getName(){
                    return name;
                }
            }

->   // Flying Bird class
            public class FlyingBird extends Bird{
                public FlyingBird(String name, String color) {
                    super(name, color);
                }
                public void fly(){
                    System.out.println(getName()+" is Flying");
                }
              }

-> // Singing Bird Class
            public class SingingBird extends Bird{
                public SingingBird(String name, String color) {
                    super(name, color);
                }
                public void sing(){
                    System.out.println(getName()+" is singing");
                }
            }

-> public class Client {
            public static void main(String[] args) {
                FlyingBird eagle = new FlyingBird("Eagle", "Brown");
                SingingBird canary = new SingingBird("Canary", "Yellow");
        
                // Display information about the birds
                System.out.println("Information about birds:");
                eagle.display();
                canary.display();
        
                // Perform specific actions
                System.out.println("\nBird actions:");
                eagle.fly();
                canary.sing();
            }
        }


